{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/about/index.tsx","webpack:///./components/accordion/index.tsx","webpack:///./components/auth-info/index.tsx","webpack:///./components/auth-note/index.tsx","webpack:///./components/auth-pin/index.tsx","webpack:///./components/background-img/index.ts","webpack:///./components/buttons/index.tsx","webpack:///./components/call-me-back-modal/index.tsx","webpack:///./components/desktop-slider/index.tsx","webpack:///./components/faq/data.ts","webpack:///./components/faq/index.tsx","webpack:///./components/feedback-question/index.tsx","webpack:///./components/header/index.tsx","webpack:///./components/info-in-numbers/index.tsx","webpack:///./components/info/index.tsx","webpack:///./components/modal-window/index.tsx","webpack:///./components/quick-auth-info/index.tsx","webpack:///./components/slider/index.tsx","webpack:///./components/small-text/index.tsx","webpack:///./components/stream-info/index.tsx","webpack:///./pages/index.tsx","webpack:///external \"react\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ButtonConsult, ButtonDemo } from '../buttons';\n\nconst Star = styled.div`\n  display: inline-block;\n  position: absolute;\n  font-size: 32.5px;\n  top: 6px;\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 844px;\n  font-size: 64px;\n  line-height: 76px;\n  color: #202d3d;\n  margin: 95px auto 0;\n  @media (max-width: 1279px) {\n    padding: 0 30px;\n    margin-top: 50px;\n    font-size: 45px;\n    line-height: 57px;\n  }\n  h1 {\n    line-height: 1.07;\n  }\n`;\nconst H1Description = styled.div`\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: 0;\n  color: #202d3d;\n  margin-top: 15px;\n  font-weight: 400;\n`;\n\nconst Description = styled.div`\n  margin-top: 35px;\n  display: flex;\n  flex-direction: column;\n  width: 560px;\n  p {\n    margin: 18px 0 0 0;\n  }\n`;\nconst ButtonsWrapper = styled.div`\n  width: 844px;\n  display: flex;\n  margin: 110px auto;\n  @media (max-width: 1279px) {\n    padding-left: 30px;\n  }\n  @media (max-width: 767px) {\n    width: auto;\n    padding-left: 0;\n    margin: 100px auto;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n\nexport const About: React.FC<IHandler> = ({ handler }) => {\n  return (\n    <Wrapper>\n      <h1>\n        Мобильный{' '}\n        <span>\n          ID<Star>*</Star>\n        </span>\n      </h1>\n      <H1Description>\n        * Услуга предоставляется для юридических лиц.\n      </H1Description>\n      <Description>\n        <p>\n          Быстрая и безопасная авторизация на сайтах и приложениях партнеров с\n          помощью мобильного телефона\n        </p>\n        <p>\n          Универсальное решение проблемы забытых паролей и логинов, и\n          автозаполнению данных.\n        </p>\n      </Description>\n      <ButtonsWrapper>\n        <ButtonConsult margin=\"0 85px 0 0\" handler={handler} />\n        <ButtonDemo />\n      </ButtonsWrapper>\n    </Wrapper>\n  );\n};\n\nexport interface IHandler {\n  handler: Function;\n}\n","import React, { useRef, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.div`\n  cursor: pointer;\n  display: flex;\n  position: relative;\n  padding: 30px 30px 30px 31px;\n  align-items: center;\n  :before {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 10px;\n    height: 100%;\n    content: '';\n    transition: all 0.4s ease;\n    transition-delay: 0s;\n    background-image: url('/static/img/accordion/down.svg');\n    background-repeat: no-repeat;\n    background-position: 50%;\n    background-size: 10px;\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  border-top: 1px solid #f2f2f2;\n  span {\n    font-family: MuseoSansMedium, sans-serif;\n    font-size: 18px;\n    font-weight: 700;\n  }\n`;\n\nconst Icon = styled.i`\n  margin-right: 20px;\n  background-image: url('/static/img/accordion/accordion-icon.svg');\n  position: absolute;\n  top: 50%;\n  left: 0;\n  width: 15px;\n  height: 20px;\n  transform: translateY(-50%);\n  background-repeat: no-repeat;\n  background-position: 50%;\n  background-size: contain;\n`;\nconst Description = styled.ul`\n  display: block;\n  list-style: none;\n  padding: 0 0 0 31px;\n  font-size: 18px;\n  font-weight: 300;\n  line-height: 1.56;\n  color: #5a6d73;\n  margin: 0;\n  overflow: hidden;\n  max-height: 0;\n  transition: max-height 0.4s ease-in-out;\n  &.open {\n    max-height: 300px;\n  }\n  li {\n    display: block;\n    padding: 16px 0;\n  }\n  div {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Accordion: React.FC<IAccordion> = (props) => {\n  const { isOpened, setIsOpened, id, title, description } = props;\n  const descRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    isOpened\n      ? descRef.current?.classList.add('open')\n      : descRef.current?.classList.remove('open');\n  }, [isOpened]);\n\n  return (\n    <Wrapper>\n      <Title onClick={() => setIsOpened(id)}>\n        <Icon /> <span>{title}</span>\n      </Title>\n      <Description ref={descRef}>\n        <li>\n          {description.map((el) => (\n            <div>{el}</div>\n          ))}\n        </li>\n      </Description>\n    </Wrapper>\n  );\n};\n\ninterface IAccordion {\n  isOpened: boolean;\n  setIsOpened: Function;\n  id: number;\n  title: string;\n  description: string[];\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Slider } from '../slider';\n\nexport const SliderWrapper = styled.div<IWrapper>`\n  background-color: ${(props) => props.backgroundColor};\n  position: relative;\n  display: flex;\n  width: 968px;\n  height: auto;\n  margin: auto;\n  font-family: MuseoSansCyrl, sans-serif;\n  line-height: 1.56;\n  z-index: 0;\n  color: #fff;\n  ul {\n    padding: 0;\n    line-height: 28.08px;\n    li {\n      line-height: 28px;\n      list-style: none;\n      padding: 5px 0 5px 24px;\n      font-size: 18px;\n      position: relative;\n    }\n    li::before {\n      position: absolute;\n      left: 0;\n      width: 8px;\n      height: 8px;\n      margin-top: -4px;\n      content: '';\n      border-radius: 100%;\n      background-color: #fff;\n      top: 50%;\n    }\n  }\n  ol {\n    display: flex;\n    flex-direction: column;\n    font-size: 18px;\n    padding-left: 24px;\n    margin-top: 25px;\n    margin-bottom: 35px;\n    font-weight: 300;\n    justify-content: space-evenly;\n    list-style: none;\n    counter-reset: numeric-counter;\n\n    li {\n      counter-increment: numeric-counter;\n      position: relative;\n      list-style-type: none;\n      display: list-item;\n    }\n    li:before {\n      content: counter(numeric-counter) '.';\n      font-weight: 700;\n      position: absolute;\n      left: -24px;\n    }\n  }\n`;\nexport const Info = styled.div`\n  margin-top: 58px;\n  margin-bottom: 58px;\n  margin-left: 99px;\n  width: 444px;\n  @media (max-width: 1279px) {\n    width: auto;\n    margin: 490px 58px 58px;\n  }\n`;\n\nexport const Title = styled.div`\n  font-size: 26px;\n  font-weight: 600;\n`;\nexport const SubTitle = styled.div`\n  font-size: 23px;\n  font-weight: 600;\n`;\nconst imgArray = [\n  '/static/img/slider-1/1.1.png',\n  '/static/img/slider-1/1.2.png',\n  '/static/img/slider-1/1.3.png',\n  '/static/img/slider-1/1.4.png',\n  '/static/img/slider-1/1.5.png',\n];\n\nexport const AuthInfo: React.FC<ISliderWithDescription> = (props) => {\n  return (\n    <SliderWrapper {...props}>\n      <Info>\n        <Title>Авторизация с вводом номера</Title>\n        <ol>\n          <li>\n            Клиент на сайте выбирает как способ входа или регистрации «Мобильный\n            ID»\n          </li>\n          <li>Вводит свой номер и получает на телефон Push - сообщение</li>\n          <li>\n            На указанный номер придет Push-сообщение с предложением подтвердить\n            вход и передачу данных, нажатием кнопки «Ок»\n          </li>\n        </ol>\n        <SubTitle>Возможности</SubTitle>\n        <ul>\n          <li>Минимальное количество шагов</li>\n          <li>Безопасность передачи данных</li>\n          <li>\n            Работает на любых устройствах: компьютер, планшет, смартфон,\n            кнопочный телефон\n          </li>\n        </ul>\n      </Info>\n      <Slider imgArray={imgArray} />\n    </SliderWrapper>\n  );\n};\n\nexport interface ISliderWithDescription {\n  backgroundColor: string;\n}\n\ninterface IWrapper {\n  backgroundColor: string;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div<INote>`\n  width: 868px;\n  font-size: 14px;\n  letter-spacing: 0;\n  color: #202d3d;\n  margin: ${(props) => props.margin || '30px auto 0'};\n`;\n\nexport const Note: React.FC<INote> = (props) => {\n  return (\n    <Wrapper {...props}>\n      * функционал который появится в ближайшее время\n    </Wrapper>\n  );\n};\ninterface INote {\n  margin?: string;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Slider } from '../slider';\nimport {\n  Info,\n  ISliderWithDescription,\n  SliderWrapper,\n  SubTitle,\n  Title,\n} from '../auth-info';\nimport { Description } from '../quick-auth-info';\n\nconst Wrapper = styled(SliderWrapper)`\n  margin: 200px auto 0 auto;\n  color: #001424;\n  ul {\n    li::before {\n      background-color: #001424;\n    }\n  }\n  ${SubTitle} {\n    font-family: MuseoSans, sans-serif;\n    font-weight: 600;\n  }\n`;\n\nconst AuthPinTitle = styled(Title)`\n  font-family: MuseoSans, sans-serif;\n`;\n\nconst imgArray = [\n  '/static/img/slider-3/3.1.png',\n  '/static/img/slider-3/3.2.png',\n  '/static/img/slider-3/3.3.png',\n  '/static/img/slider-3/3.4.png',\n  '/static/img/slider-3/3.5.png',\n];\n\nexport const AuthPin: React.FC<ISliderWithDescription> = (props) => {\n  return (\n    <Wrapper {...props}>\n      <Info>\n        <AuthPinTitle>Авторизация с вводом PIN-кода *</AuthPinTitle>\n        <Description>\n          На сайтах с повышенными требованиями к безопасности, а также где в\n          онлайн требуется подтверждение значимых операций, заказа, платежной\n          транзакции, реализовано функционал подтверждения с помощью ввода\n          ПИН-кода, который создается клиентом и храниться на SIM-карте\n          телефона, обеспечивая высокую надежность и защищенность данных\n        </Description>\n        <SubTitle>Возможности</SubTitle>\n        <ul>\n          <li>Единый PIN-код для всех операций</li>\n          <li>\n            Передача персонализированных данных с согласия клиента только после\n            получения явного подтверждения\n          </li>\n          <li>\n            Проверка персонализированных данных с согласия клиента в онлайн\n            сервисе\n          </li>\n        </ul>\n      </Info>\n      <Slider imgArray={imgArray} controllerColor=\"#6e7782\" />\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const BackgroundImg = styled.img.attrs({src: '/static/img/backgrounds/mock.png'})`\n  position: absolute;\n  top: 4869px;\n  right: 0;\n  width: 35em;\n`\n","import styled from 'styled-components';\nimport React from 'react';\n\nconst ButtonConsultWrapper = styled.div<IButton>`\n  font-family: MuseoSansMedium, sans-serif;\n  font-size: 18px;\n  line-height: 60px;\n  display: inline-block;\n  width: 287px;\n  min-width: 220px;\n  height: 60px;\n  padding: 0 38px;\n  cursor: pointer;\n  -webkit-transition: background-color 0.3s ease;\n  transition: background-color 0.3s ease;\n  text-align: center;\n  text-decoration: none;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  background-color: #c000d9;\n  box-shadow: none;\n  margin: ${(props) => props.margin};\n  :hover {\n    background-color: #de04fa;\n    color: #fff;\n  }\n`;\n\nconst ButtonDemoWrapper = styled(ButtonConsultWrapper)`\n  color: #202d3d;\n  background-color: transparent;\n  border: 2px solid #bbc1c7;\n  font-weight: 700;\n`;\n\nconst ButtonsCallMeBackWrapper = styled.button`\n    font-size: 18px;\n    line-height: 60px;\n    display: inline-block;\n    min-width: 220px;\n    height: 60px;\n    padding: 0 38px;\n    cursor: pointer;\n    transition: background-color .3s ease;\n    text-align: center;\n    text-decoration: none;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    background-color: #c000d9;\n    box-shadow: none;\n}`\n\nexport const ButtonConsult: React.FC<IButtonConsult> = ({\n  handler,\n  ...props\n}) => {\n  return (\n    <ButtonConsultWrapper {...props} onClick={() => handler()}>\n      Получить консультацию\n    </ButtonConsultWrapper>\n  );\n};\n\nexport const ButtonCallMeBack: React.FC<{handler: Function}> = ({handler}) => {\n  return (\n    <ButtonsCallMeBackWrapper\n      onClick={() => handler()}\n    >\n    Отправить запрос на звонок\n    </ButtonsCallMeBackWrapper>\n  )\n}\n\nexport const ButtonDemo: React.FC<IButton> = (props) => {\n  return (\n    <ButtonDemoWrapper\n      {...props}\n      onClick={() => window.open('https://store.mobcon.prostream.ru/')}\n    >\n      Демо доступ\n    </ButtonDemoWrapper>\n  );\n};\n\ninterface IButton {\n  margin?: string;\n}\n\ninterface IButtonConsult extends IButton {\n  handler: Function;\n}\n","import React, { FormEvent } from 'react';\nimport styled from 'styled-components';\nimport { ButtonCallMeBack } from '../buttons';\n\nconst ContentWrapper = styled.div`\n  max-width: 800px;\n  position: relative;\n  padding: 1.2rem;\n  background: #ffffff;\n  background-clip: padding-box;\n  box-shadow: 0 12px 15px 0 rgba(0, 0, 0, 0.25);\n  margin: auto;\n`;\n\nconst Content = styled.form`\n  position: relative;\n  max-width: 690px;\n  div {\n    display: block;\n    width: 100%;\n  }\n  input {\n    font-family: MuseoSans, sans-serif;\n    font-size: 16px;\n    font-weight: 300;\n    line-height: normal;\n    margin-bottom: 24px;\n    padding: 21px 25px 19px;\n    transition: box-shadow 0.3s;\n    color: #2e3c40;\n    border: 1px solid #e9e9e9;\n    border-radius: 4px;\n    width: 100%;\n  }\n  .description {\n    font-size: 14px;\n    line-height: 1.43;\n    display: inline-block;\n    padding-left: 10px;\n    font-weight: 300;\n    text-align: center;\n    margin-top: 1em;\n  }\n  .button-wrapper {\n    display: flex;\n    justify-content: space-around;\n  }\n`;\nexport const CallMeBack: React.FC<ICallMeBack> = ({handler}) => {\n  const submitHandler = (e:FormEvent) => {\n    e.preventDefault();\n    handler();\n  }\n  return (\n    <ContentWrapper>\n      <div>\n        <Content onSubmit={submitHandler}>\n          <h4>Заказать обратный звонок</h4>\n          <div>\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Ваше имя\"\n              aria-label=\"Ваше имя\"\n            />\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Ваш номер телефона\"\n              aria-label=\"Ваше имя\"\n            />\n          </div>\n          <div className=\"button-wrapper\">\n            <ButtonCallMeBack handler={handler}/>\n          </div>\n          <div className=\"description\">\n              Нажав кнопку отправить запрос вы подтверждаете свое согласие на\n              обработку ваших данных\n          </div>\n        </Content>\n      </div>\n    </ContentWrapper>\n  );\n};\n\n\ninterface ICallMeBack {\n  handler: Function;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Slider } from '../slider';\n\nconst Wrapper = styled.div`\n  width: 868px;\n  margin: 142px auto 50px;\n`;\n\nconst Title = styled.div`\n  font-family: MuseoSansBoldest, sans-serif;\n  font-weight: 900;\n  width: 868px;\n  height: 297px;\n  font-size: 48px;\n  line-height: 58px;\n  color: #001424;\n`;\nconst SliderWrapper = styled.div`\n  position: relative;\n  width: 761px;\n  height: 428px;\n`;\n\nconst imgArray = [\n  '/static/img/slider-desktop/1.png',\n  '/static/img/slider-desktop/2.png',\n  '/static/img/slider-desktop/3.png',\n  '/static/img/slider-desktop/4.png',\n];\nexport const DesktopSlider = () => {\n  return (\n    <Wrapper>\n      <Title>\n        Мобильный ID – межоператорский сервис по авторизации с одним техническим\n        подключением и одним договором\n      </Title>\n      <SliderWrapper>\n        <Slider\n          boxShadow=\"0 22px 34px 0 rgba(0,0,0,.16)\"\n          controllerColor=\"#6e7782\"\n          imgPosition=\"initial\"\n          imgArray={imgArray}\n          imgHeight=\"428px\"\n          imgWidth=\"761px\"\n          width=\"761px\"\n          height=\"428px\"\n          removeBackground={true}\n          position=\"initial\"\n        />\n      </SliderWrapper>\n    </Wrapper>\n  );\n};\n","export const data = [\n  {\n    title: 'Мобильный ID – что это?',\n    description: [\n      'Это кнопка для размещения партнером на своих сайтах и/или в приложениях, использование которой запускает функционал быстрой и безопасной авторизации (создание учетной записи) и аутентификации (подтверждение актуальности) по номеру мобильного телефона клиента.',\n      'В случаях, когда предъявляются повышенные требования к безопасности для подтверждения действия запрашивается PIN-код.',\n    ],\n  },\n  {\n    title: 'Почему это удобно и в чем преимущества использования. Какой полезный опыт и какие данные получает партнер (владелец сайта/приложения)?',\n    description: ['Для клиента это – простой и легкий вход на сайт и/или в приложение без необходимости помнить логин и/или пароль, для партнера (владельца сайта или приложения) – это проверенные Оператором номера телефонов клиентов, подтверждение действия и/или операции, возможность получения дополнительной информации о клиенте (номер телефона, email, ФИО, адрес доставки и т.п.).'],\n  },\n  {\n    title: 'Как это работает?',\n    description: [\n      'Клиент на сайте выбирает как способ входа или регистрации «Мобильный ID», затем вводит свой номера и получает на телефон PUSH-сообщение, затем на указанный номер придет PUSH-сообщение с предложением подтвердить вход и передачу данных нажатием кнопки «Ок».',\n      'Мобильный ID работает по технологии Mobile Connect, являющейся мировым стандартом, поддерживаемым Ассоциацией GSM (GSMA). Функционал уже запустили 70 операторов мобильной связи в 38 странах мира.',\n    ],\n  },\n  {\n    title: 'На каких устройствах и для каких Операторов связи это работает?',\n    description: ['Мобильный ID поддерживается Операторами связи – МТС, МегаФон, Теле2, БиЛайн с возможностью использования на любых устройствах – ПК, планшет, смартфон, кнопочный телефон.'],\n  },\n  {\n    title: 'Сколько это стоит и кто платит за использование?',\n    description: [\n      'Бесплатно для клиента. Использование функциональности платно для партнера (владельца сайта и/или приложения) с возможностью гибкого ценообразования (например, бесплатный пробный период 30 дней, промо-пакет из минимального бесплатного количества операций и т.п.).'],\n  },\n  {\n    title: 'Как подключиться?',\n    description: ['Отправить заполненную форму обратной связи, после чего с Вам свяжется менеджер с прояснением деталей, обмена контактам для быстрой связи и отправки необходимой документации.'],\n  },\n  {\n    title: 'Почему это безопасно?',\n    description: [\n      'Использование функционала возможно только для зарегистрированного на платформе сайта/приложения с необходимым выделением для этого персональных ключей.',\n      'Отправка PUSH-сообщения производится по специальному шифрованному каналу с персональным ключом для каждого клиента.',\n      'Во многих странах технология используется для работы с электронными государственными и финансовыми услугами, возможности использования электронной цифровой подписи.'\n    ],\n  },\n  {\n    title: 'PUSH-сообщение – что это?',\n    description: ['Это краткое всплывающее текстовое уведомление, содержащее призыв для клиента к подтверждению целевого действия по Авторизации и/или Аутентификации.'],\n  },\n  {\n    title: 'PIN-код – что это?',\n    description: [\n      'Это персональный четырехзначный цифровой пароль, задаваемый клиентом на первичном этапе Авторизации и/или Аутентификации и в дальнейшем используемый для защиты своего согласия, например, при подтверждении операции, покупки и т.п.',\n      'Данный пароль хранится в защищенной области памяти на SIM-карте, доступной только для клиента (без доступа такой к информации Оператора).',\n    ],\n  },\n];\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Accordion } from '../accordion';\nimport { useState } from 'react';\nimport { data } from './data';\n\nconst Wrapper = styled.div`\n  width: 690px;\n  margin: 100px auto;\n  font-family: MuseoSans, sans-serif;\n  list-style: none;\n  h3 {\n    text-align: center;\n    margin-bottom: 30px;\n  }\n`;\n\nconst AccordionWrapper = styled.div`\n  div:first-child {\n    border-top: none;\n  }\n`;\n\nconst FAQNote = styled.div`\n  font-size: 14px;\n  letter-spacing: 0;\n  color: #202d3d;\n  margin-top: 50px;\n  font-family: MuseoSans, sans-serif;\n`;\n\nconst initState = new Array(9).fill(false);\nexport const FAQ = () => {\n  const [state, setState] = useState(initState);\n\n  const handler = (id: number) => {\n    const newState = new Array(9).fill(false);\n    newState[id] = !state[id];\n    setState(newState);\n  };\n\n  return (\n    <Wrapper>\n      <h3>Вопросы и ответы *</h3>\n      <AccordionWrapper>\n        {state.map((el, id) => (\n          <Accordion\n            isOpened={state[id]}\n            setIsOpened={handler}\n            id={id}\n            description={data[id].description}\n            title={data[id].title}\n          />\n        ))}\n      </AccordionWrapper>\n      <FAQNote>\n        * Получение дополнительной информации о клиенте при наличии\n        соответствующего согласия. Функционал в разработке.\n      </FAQNote>\n    </Wrapper>\n  );\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n  margin-bottom: 144px;\n`;\nconst TitleWrapper = styled.div`\n  font-size: 27px;\n  line-height: 20px;\n  color: #001424;\n  font-family: MuseoSans, sans-serif;\n  font-weight: 600;\n  text-align: center;\n  padding: 0 30px;\n`;\nconst Options = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 27px;\n  color: #001424;\n  margin-top: 45px;\n  margin-bottom: 20px;\n  font-family: MuseoSansMedium, sans-serif;\n  .option {\n    cursor: pointer;\n    width: 4em;\n    text-align: center;\n  }\n  .yes {\n    margin-right: 30px;\n  }\n`;\nconst Amount = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 27px;\n  font-family: MuseoSansMedium, sans-serif;\n  color: #001424;\n  .option2 {\n    cursor: pointer;\n    width: 4em;\n    text-align: center;\n  }\n  div:first-child {\n    margin-right: 30px;\n  }\n`;\n\nexport const FeedbackQuestion = () => {\n  const [likes, setLikes] = useState(24);\n  const [dislikes, setDislikes] = useState(4);\n\n  const handleYesClick = () => setLikes(likes + 1);\n  const handleNoClick = () => setDislikes(dislikes + 1);\n  return (\n    <Wrapper>\n      <TitleWrapper>Эта страница была полезна?</TitleWrapper>\n      <Options>\n        <div className=\"option yes\" onClick={handleYesClick}>\n          🤩 Да\n        </div>\n        <div className=\"option\" onClick={handleNoClick}>\n          🤨 Нет\n        </div>\n      </Options>\n      <Amount>\n        <div className=\"option2\">{likes}</div>\n        <div className=\"option2\">{dislikes}</div>\n      </Amount>\n    </Wrapper>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 64px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #c000d9;\n  color: #fff;\n  font-size: 25px;\n  font-weight: 300;\n  @media (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    height: auto;\n    text-align: center;\n    font-size: 14px;\n  }\n  @media (max-width: 1279px) {\n    padding: 15px;\n    font-size: 20px;\n  }\n  a {\n    color: #fff;\n    text-decoration: underline;\n    cursor: pointer;\n    font-weight: 300;\n    margin-left: 35px;\n  }\n`;\n\nexport const Header: React.FC<IHeader> = ({ handler }) => {\n  return (\n    <Wrapper>\n      Сомневаетесь? Протестируйте до 30 дней бесплатно!\n      <a onClick={() => handler()}>Попробовать </a>\n    </Wrapper>\n  );\n};\n\ninterface IHeader {\n  handler: Function;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 844px;\n  margin: auto;\n  font-family: MuseoSansBold, sans-serif;\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 175px;\n  font-family: MuseoSansMedium, sans-serif;\n  .number {\n    display: flex;\n    justify-content: space-between;\n    font-size: 66px;\n    line-height: normal;\n    margin-bottom: 6px;\n    font-weight: 900;\n  }\n  .text {\n    font-size: 18px;\n    font-weight: 300;\n    line-height: 1.56;\n    color: #5a6d73;\n  }\n`;\n\nexport const InfoInNumbers = () => {\n  return (\n    <Wrapper>\n      <InfoWrapper>\n        <span className=\"number\">70</span>\n        <span className=\"text\">операторов</span>\n      </InfoWrapper>\n      <InfoWrapper>\n        <span className=\"number\">38</span>\n        <span className=\"text\">стран мира</span>\n      </InfoWrapper>\n    </Wrapper>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { SubTitle, Title } from '../auth-info';\nimport { ButtonConsult, ButtonDemo } from '../buttons';\nimport { Note } from '../auth-note';\nimport { IHandler } from '../about';\n\nconst Wrapper = styled.div`\n  width: 844px;\n  margin: 130px auto 50px;\n  font-family: MuseoSansMedium, sans-serif;\n`;\n\nconst InfoTitle = styled(Title)`\n  width: 568px;\n  height: 64px;\n  font-size: 26px;\n  color: #001424;\n  font-weight: 700;\n`;\nconst Advantages = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 844px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n  ul {\n    width: 380px;\n    height: auto;\n    color: #001424;\n    margin-top: 15px;\n    padding: 0;\n    list-style: none;\n  }\n  li {\n    font-size: 18px;\n    line-height: inherit;\n    padding-bottom: 5px;\n    padding-top: 5px;\n    position: relative;\n    padding-left: 24px;\n    color: #2e3c40;\n    font-family: MuseoSans, sans-serif;\n    font-weight: 300;\n  }\n  li:before {\n    top: 0.8em;\n    position: absolute;\n    left: 0;\n    width: 8px;\n    height: 8px;\n    margin-top: -4px;\n    content: '';\n    border-radius: 100%;\n    background-color: #000;\n  }\n`;\nconst ButtonsWrapper = styled.div`\n  width: 800px;\n  display: flex;\n`;\n\nexport const Info: React.FC<IHandler> = ({ handler }) => {\n  return (\n    <Wrapper>\n      <InfoTitle>\n        Автоматическое заполнение профиля и обогащение его персонализированными\n        данными с согласия клиента *\n      </InfoTitle>\n      <Advantages>\n        <div>\n          <SubTitle>Преимущества для клиента:</SubTitle>\n          <ul>\n            <li>Не заполняйте длинные анкеты, Мобильный ID заполнит за вас</li>\n            <li>Управляйте доступом к своим данным</li>\n            <li>Экономия времени при заполнении</li>\n          </ul>\n        </div>\n        <div>\n          <SubTitle>Для сервиса:</SubTitle>\n          <ul>\n            <li>\n              Получение персонализированных данных с согласия клиента (телефон,\n              паспортные данные, адреса доставки товара и т.п.)\n            </li>\n            <li>Повышение конверсии</li>\n          </ul>\n        </div>\n      </Advantages>\n      <ButtonsWrapper>\n        <ButtonConsult margin=\"0 35px 0 0\" handler={handler} />\n        <ButtonDemo />\n      </ButtonsWrapper>\n      <Note margin=\"50px 0 0 0\" />\n    </Wrapper>\n  );\n};\n","import React, { MouseEvent } from 'react';\nimport styled from 'styled-components';\nimport { IHandler } from '../about';\nimport { ModalWindowContent } from '../../pages';\nimport { CallMeBack } from '../call-me-back-modal';\n\nconst Wrapper = styled.div`\n  background: rgba(0, 0, 0, 0.75);\n  display: flex;\n  align-items: flex-start;\n  position: fixed;\n  opacity: 0;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1000;\n  padding: 1.2rem;\n  transition: all 0.3s ease-in-out;\n  visibility: hidden;\n  &.open {\n    opacity: 1;\n    visibility: visible;\n  }\n  h4 {\n    margin-bottom: 1em;\n    text-align: center;\n    margin-top: 0.5em;\n  }\n`;\nconst CloseButton = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  display: flex;\n  color: #fff;\n  cursor: pointer;\n`;\n\nconst wrapperId = 'modal-window-close-area';\n\nexport const ModalWindow: React.FC<IModalWindow> = (props) => {\n  const { modalIsOpen, handler, content, handleCallMeBackClick } = props;\n  const closeButtonClickHandler = (e: MouseEvent) => {\n    e.stopPropagation();\n    handler();\n  };\n  const wrapperClickHandler = (e: MouseEvent<HTMLDivElement>) => {\n    // @ts-ignore\n    if (e.target.getAttribute('id') === wrapperId) handler();\n  };\n  return (\n    <Wrapper\n      id={wrapperId}\n      className={modalIsOpen ? 'open' : ''}\n      onClick={wrapperClickHandler}\n    >\n      <CloseButton onClick={closeButtonClickHandler}>X</CloseButton>\n      {content === ModalWindowContent.CALL_ME_BACK ? <CallMeBack handler={handleCallMeBackClick} /> : ''}\n    </Wrapper>\n  );\n};\n\ninterface IModalWindow extends IHandler {\n  modalIsOpen: boolean;\n  content: ModalWindowContent | null;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Slider } from '../slider';\nimport {\n  Info,\n  ISliderWithDescription,\n  SliderWrapper,\n  SubTitle,\n  Title,\n} from '../auth-info';\n\nconst Wrapper = styled(SliderWrapper)`\n  margin: 200px auto;\n`;\n\nexport const Description = styled.div`\n  width: 468px;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  margin-top: 25px;\n  margin-bottom: 35px;\n  font-weight: 300;\n`;\n\nexport const QuickAuthInfo: React.FC<ISliderWithDescription> = (props) => {\n  return (\n    <Wrapper {...props}>\n      <Info>\n        <Title>Быстрая авторизация</Title>\n        <Description>\n          При использовании мобильного интернета, клиенту даже не придется\n          вводить номер телефона. Оператор определит его автоматически, вход\n          осуществляется при выборе клиентом кнопки «Мобильный ID» и\n          подтверждением входа в Push-сообщении нажатием кнопки «ОК»\n        </Description>\n        <SubTitle>Возможности</SubTitle>\n        <ul>\n          <li>Легкий вход и регистрация на сайтах по номеру телефона</li>\n          <li>Проверка номера вашего клиента на актуальность</li>\n          <li>\n            Подтверждение действия, операций, заказа, платежной транзакции через\n            клик или ввод ПИН-кода в телефоне\n          </li>\n        </ul>\n      </Info>\n      <Slider\n        imgArray={[\n          '/static/img/slider-2/2.1.png',\n          '/static/img/slider-2/2.2.png',\n          '/static/img/slider-2/2.3.png',\n          '/static/img/slider-2/2.4.png',\n        ]}\n      />\n    </Wrapper>\n  );\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div<ISliderWrapper>`\n  width: ${(props) => props.width || '250px'};\n  height: ${(props) => props.height || '501px'};\n  position: ${(props) => props.position || 'absolute'};\n  right: ${(props) => props.right || '80px'};\n  top: ${(props) => props.top || '-105px'};\n  background-image: ${(props) =>\n    props.removeBackground\n      ? 'none'\n      : 'url(\"https://mobilestream.ru//landing/images/mobileid/iphone-transparent.png\")'};\n  background-size: contain;\n  box-shadow: ${(props) => props.boxShadow || 'inherit'};\n  .wrapper {\n    overflow: hidden;\n    display: flex;\n    height: ${(props) => props.imgHeight || '382px'};\n    width: ${(props) => props.imgWidth || '218px'};\n    top: 62px;\n    left: 16px;\n    position: ${(props) => props.imgPosition || 'absolute'};\n  }\n  img {\n    opacity: 0;\n    position: absolute;\n  }\n  .active {\n    opacity: 1;\n    transition-duration: 0.5s;\n    transition-property: opacity;\n    transition-timing-function: ease-in-out;\n  }\n`;\n\nconst Controllers = styled.div`\n  display: flex;\n  justify-content: space-between;\n  position: absolute;\n  width: 86px;\n  bottom: -40px;\n  margin-left: 50%;\n  transform: translateX(-50%);\n  .active {\n    background-color: #c000d9;\n  }\n`;\n\nconst Controller = styled.div<IController>`\n  width: 10px;\n  height: 10px;\n  border-radius: 5px;\n  background-color: ${(props) => props.controllerColor || '#fff'};\n  cursor: pointer;\n  transition: background-color 0.3s;\n`;\n\nexport const Slider: React.FC<ISlider> = ({\n  controllerColor,\n  imgArray,\n  ...props\n}) => {\n  const [selectedImg, setSelectedImg] = useState(0);\n  const handleControllerClick = (id: number) => {\n    setSelectedImg(id);\n  };\n  return (\n    <Wrapper {...props}>\n      <div className=\"wrapper\">\n        {imgArray.map((img, id) => (\n          <img\n            src={img}\n            alt=\"slide\"\n            key={img}\n            className={id === selectedImg ? 'active' : ''}\n          />\n        ))}\n      </div>\n      <Controllers>\n        {imgArray.map((img, id) => (\n          <Controller\n            controllerColor={controllerColor}\n            key={img}\n            className={id === selectedImg ? 'active' : ''}\n            onClick={() => handleControllerClick(id)}\n          />\n        ))}\n      </Controllers>\n    </Wrapper>\n  );\n};\n\ninterface ISlider extends IController, ISliderWrapper {\n  imgArray: string[];\n}\n\ninterface IController {\n  controllerColor?: string;\n}\n\ninterface ISliderWrapper {\n  width?: string;\n  height?: string;\n  position?: string;\n  removeBackground?: boolean;\n  right?: string;\n  top?: string;\n  imgWidth?: string;\n  imgHeight?: string;\n  imgPosition?: string;\n  boxShadow?: string;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst SmallTextWrapper = styled.div`\n  width: 844px;\n  padding-right: 276px;\n  height: auto;\n  font-size: 18px;\n  line-height: 24px;\n  color: #202d3d;\n  margin: 90px auto 160px;\n  font-family: MuseoSansMedium, sans-serif;\n  @media (max-width: 1279px) {\n    padding-left: 30px;\n    font-size: 14px;\n    line-height: 21px;\n  }\n  a {\n    color: #c000d9;\n    text-decoration: none;\n  }\n`;\n\nexport const SmallText = () => {\n  return (\n    <SmallTextWrapper>\n      Решение работает по технологии\n      <a href=\"https://mobileconnect.io/\">Mobile Connect</a>, являющейся мировым\n      стандартом, поддерживаемым Ассоциацией GSM (GSMA). Функционал уже\n      запустили 70 операторов мобильной связи в 38 странах мира. В России\n      поддерживается операторами МТС, МегаФон, Билайн, Теле2\n    </SmallTextWrapper>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Title } from '../auth-info';\nimport { ButtonConsult } from '../buttons';\nimport { IHandler } from '../about';\n\nconst Wrapper = styled.div`\n  width: 844px;\n  margin: 280px auto 50px;\n  ${Title} {\n    font-family: MuseoSansBold, sans-serif;\n    font-weight: 900;\n    font-size: 64px;\n    line-height: 76px;\n    color: #202d3d;\n    span {\n      color: #c000d9;\n    }\n  }\n  p {\n    width: 368px;\n    font-size: 18px;\n    line-height: 24px;\n    color: #5a6d73;\n    font-family: MuseoSans, sans-serif;\n    margin-bottom: 30px;\n  }\n`;\nconst Description = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 40px;\n`;\nconst ButtonWrapper = styled.div`\n  margin-top: 50px;\n`;\n\nexport const StreamInfo: React.FC<IHandler> = ({ handler }) => {\n  return (\n    <Wrapper>\n      <Title>\n        Мобильный ID и <span>Stream</span>\n      </Title>\n      <Description>\n        <div>\n          <h5>Удобно</h5>\n          <p>\n            Позволит быстро войти в приложение и на веб-сайты по номеру телефона\n            без необходимости запоминать сложные пароли и отдельные логины для\n            разных сервисов\n          </p>\n          <h5>Доступно</h5>\n          <p>\n            Мобильный ID доступен всем клиентам вне зависимости от модели\n            телефона и Оператора связи\n          </p>\n          <h5>Надежно</h5>\n          <p>\n            Высокий уровень защиты персональной информации, которая не\n            передается без явного разрешения Клиента в т.ч. посредством\n            использования многофакторной аутентификации\n          </p>\n        </div>\n        <div>\n          <h5>Гибко</h5>\n          <p>\n            Универсальный API Mobile Connect - промышленный стандарт мобильной\n            авторизации GSMA официально поддерживается ведущими Операторами\n            связи во всем мире (уже используют более 100 млн человек)\n          </p>\n          <h5>Совместимо</h5>\n          <p>\n            Доступность для Клиента без специального оборудования на смартфонах,\n            планшетах и обычных телефонах, не требующих дополнительной настройки\n          </p>\n          <h5>Эффективно</h5>\n          <p>\n            Повышение доверия к сервису со стороны клиентов за счет простоты и\n            удобства\n          </p>\n        </div>\n      </Description>\n      <ButtonWrapper>\n        <ButtonConsult handler={handler} />\n      </ButtonWrapper>\n    </Wrapper>\n  );\n};\n","import React, { useState } from \"react\";\nimport {Header} from \"../components/header\";\nimport {About} from \"../components/about\";\nimport {InfoInNumbers} from \"../components/info-in-numbers\";\nimport {SmallText} from \"../components/small-text\";\nimport {AuthInfo} from \"../components/auth-info\";\nimport {QuickAuthInfo} from \"../components/quick-auth-info\";\nimport {AuthPin} from \"../components/auth-pin\";\nimport {Note} from \"../components/auth-note\";\nimport {DesktopSlider} from \"../components/desktop-slider\";\nimport { Info } from '../components/info';\nimport { StreamInfo } from '../components/stream-info';\nimport { FAQ } from '../components/faq';\nimport { FeedbackQuestion } from '../components/feedback-question';\nimport { ModalWindow } from '../components/modal-window';\nimport {BackgroundImg} from \"../components/background-img\";\n\nexport enum ModalWindowContent {\n    CALL_ME_BACK = 'callMeBack',\n    CONSULT_ME = 'consultMe'\n}\n\nconst HomePage = () => {\n      const [modalIsOpen, setModalIsOpen] = useState(false)\n      const [modalWindowContent, setModalWindowContent] = useState<ModalWindowContent | null>(null)\n      const openModalWindow = () => {\n          setModalIsOpen(true)\n          setModalWindowContent(ModalWindowContent.CONSULT_ME)\n      }\n      const closeModalWindow = () => {\n          setModalIsOpen(false)\n          setModalWindowContent(null)\n      }\n      const openModalCallMeBack = () => {\n        setModalIsOpen(true)\n        setModalWindowContent(ModalWindowContent.CALL_ME_BACK)\n      }\n      const handleCallMeBackClick = () => {\n        setModalWindowContent(null);\n        setModalIsOpen(false);\n      }\n  return (\n    <>\n          <ModalWindow modalIsOpen={modalIsOpen} handler={closeModalWindow} content={modalWindowContent} handleCallMeBackClick={handleCallMeBackClick}/>\n          <Header handler={openModalCallMeBack}/>\n          <About handler={openModalWindow}/>\n        <InfoInNumbers/>\n        <SmallText/>\n        <AuthInfo backgroundColor=\"#6e7782\"/>\n        <QuickAuthInfo backgroundColor=\"#202d3d\"/>\n        <AuthPin backgroundColor=\"#e2e5eb\"/>\n        <Note/>\n        <DesktopSlider/>\n        <Info handler={openModalWindow}/>\n        <BackgroundImg />\n        <StreamInfo handler={openModalWindow}/>\n        <FAQ/>\n        <FeedbackQuestion/>\n    </>\n  );\n};\n\nexport default HomePage;\n","module.exports = require(\"react\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AAEA;;;;;AAAA;AAOA;;;;;;;;;;;;;;;;AAAA;AAiBA;;;;;;;AAAA;AASA;;;;;;;;AAAA;AASA;;;;;;;;;;;;;;;AAAA;AAiBA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AAAA;AAsBA;;;;;;;;AAAA;AAUA;;;;;;;;;;;;AAAA;AAaA;;;;;;;;;;;;;;;;;;;;;;AAAA;AAwBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADA;AA2DA;;;;;;;;;AAAA;AAWA;;;AAAA;AAIA;;;AAAA;AAIA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;ACvHA;AACA;AAEA;;;;;AAKA;AALA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AAOA;AAEA;;;;;;;;AAQA;;;;AARA;AAcA;;AAAA;AAIA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;AClEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAEA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;AAnBA;AA0BA;;;;;AAAA;AAOA;;;;;;;;;;;;;;;;AAAA;AAkBA;AAGA;AAFA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AAGA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AAEA;;;;;;;;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAkCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AAEA;;;AAAA;AAKA;;;;;;;;AAAA;AASA;;;;AAAA;AAMA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAEA;AACA;AAFA;AAQA;AACA;AAFA;AAKA;AACA;AAFA;AAQA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AASA;AACA;AAFA;AAKA;AACA;AAFA;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;AAAA;AAWA;;;;AAAA;AAMA;;;;;;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;;AAAA;AAGA;;;;;;;;AAAA;AASA;;;;;;;;;;;;;;;;AAAA;AAiBA;;;;;;;;;;;;;;AAAA;AAgBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AA8BA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AAEA;;;;;AAAA;AAOA;;;;;;;;;;;;;;;;;;;AAAA;AAqBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AAGA;;;;AAAA;AAMA;;;;;;AAAA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAqCA;;;AAAA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;AChGA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AA0BA;;;;;;;;;;AAAA;AAYA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AAQA;;AAAA;AAIA;;;;;;;;;AAAA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;;;AAIA;AACA;;;AAGA;;;;;;;;;;;;AAnBA;AAiCA;;;;;;;;;;;AAAA;AAaA;;;;AAIA;;;AAJA;AASA;AAIA;AAHA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AAEA;;;;;;;;;;;;;;;;;;AAAA;AAoBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AAGA;;;AAGA;;;;;;;;;;;;;;;;;;AAHA;AAsBA;;;;AAAA;AAKA;;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC9DA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}