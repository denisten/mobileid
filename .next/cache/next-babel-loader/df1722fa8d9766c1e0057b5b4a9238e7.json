{"ast":null,"code":"var _jsxFileName = \"/Users/denisten/workspace/mid-landing/components/consult-me/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { ContentWrapper, ModalWindowContentWrapper } from '../call-me-back-modal';\nimport { CancelButton, SendButton } from '../buttons';\nconst MultilineInput = styled.textarea`\n  width: 100%;\n  min-height: 160px;\n  resize: none;\n  font-family: MuseoSans, sans-serif;\n  font-size: 16px;\n  font-weight: 300;\n  line-height: normal;\n  margin-bottom: 24px;\n  padding: 21px 25px 19px;\n  transition: box-shadow 0.3s;\n  color: #2e3c40;\n  border: 1px solid #e9e9e9;\n  border-radius: 4px;\n`;\nconst regExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport const ConsultMe = ({\n  consultMeHandler,\n  cancelHandler\n}) => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const inputRef = useRef(null);\n  const {\n    0: hasError,\n    1: setHasError\n  } = useState(false);\n\n  const emailOnChangeHandler = e => {\n    setEmail(e.target.value);\n  };\n\n  const onBlur = () => regExp.test(String(email).toLowerCase()) ? setHasError(false) : setHasError(true);\n\n  useEffect(() => {\n    debugger;\n    console.log(window);\n\n    if (inputRef.current) {\n      console.log('worked?');\n      inputRef.current.focus();\n    }\n  });\n  return __jsx(ContentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(ModalWindowContentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430 \\u0437\\u0430\\u044F\\u0432\\u043A\\u0438 \\u043D\\u0430 \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043D\\u0441\\u0443\\u043B\\u044C\\u0442\\u0430\\u0446\\u0438\\u0438\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    autoFocus: true,\n    className: hasError ? 'invalid' : '',\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    \"aria-label\": \"Email\",\n    onChange: emailOnChangeHandler,\n    onBlur: onBlur,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(MultilineInput, {\n    name: \"message\",\n    placeholder: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0435 \\u0441\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u044F\",\n    maxLength: 500,\n    \"aria-label\": \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0435 \\u0441\\u0432\\u0435\\u0434\\u0435\\u043D\\u0438\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"button-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(SendButton, {\n    handler: consultMeHandler,\n    disableFlag: hasError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), __jsx(CancelButton, {\n    handler: cancelHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  })))));\n};","map":{"version":3,"sources":["/Users/denisten/workspace/mid-landing/components/consult-me/index.tsx"],"names":["React","useEffect","useRef","useState","styled","ContentWrapper","ModalWindowContentWrapper","CancelButton","SendButton","MultilineInput","textarea","regExp","ConsultMe","consultMeHandler","cancelHandler","email","setEmail","message","setMessage","inputRef","hasError","setHasError","emailOnChangeHandler","e","target","value","onBlur","test","String","toLowerCase","console","log","window","current","focus"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  ContentWrapper,\n  ModalWindowContentWrapper,\n} from '../call-me-back-modal';\nimport { CancelButton, SendButton } from '../buttons';\n\nconst MultilineInput = styled.textarea`\n  width: 100%;\n  min-height: 160px;\n  resize: none;\n  font-family: MuseoSans, sans-serif;\n  font-size: 16px;\n  font-weight: 300;\n  line-height: normal;\n  margin-bottom: 24px;\n  padding: 21px 25px 19px;\n  transition: box-shadow 0.3s;\n  color: #2e3c40;\n  border: 1px solid #e9e9e9;\n  border-radius: 4px;\n`;\nconst regExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const ConsultMe: React.FC<IConsultMe> = ({\n  consultMeHandler,\n  cancelHandler,\n}) => {\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const inputRef = useRef(null);\n\n  const [hasError, setHasError] = useState(false);\n\n  const emailOnChangeHandler = (e: InputEvent) => {\n    setEmail(e.target.value);\n  };\n  const onBlur = () =>\n    regExp.test(String(email).toLowerCase())\n      ? setHasError(false)\n      : setHasError(true);\n\n  useEffect(() => {\n    debugger\n    console.log(window)\n    if (inputRef.current) {\n\n      console.log('worked?');\n      inputRef.current.focus();\n    }\n  });\n\n  return (\n    <ContentWrapper>\n      <div>\n        <ModalWindowContentWrapper>\n          <h4>Отправка заявки на получение консультации</h4>\n          <div>\n            <input\n              autoFocus={true}\n              className={hasError ? 'invalid' : ''}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              aria-label=\"Email\"\n              onChange={emailOnChangeHandler}\n              onBlur={onBlur}\n              value={email}\n            />\n          </div>\n          <div>\n            <MultilineInput\n              name=\"message\"\n              placeholder=\"Дополнительные сведения\"\n              maxLength={500}\n              aria-label=\"Дополнительные сведения\"\n            />\n          </div>\n          <div className=\"button-wrapper\">\n            <SendButton handler={consultMeHandler} disableFlag={hasError} />\n            <CancelButton handler={cancelHandler} />\n          </div>\n        </ModalWindowContentWrapper>\n      </div>\n    </ContentWrapper>\n  );\n};\n\ninterface IConsultMe {\n  consultMeHandler: Function;\n  cancelHandler: Function;\n}\n"]},"metadata":{},"sourceType":"module"}