{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nconst help = async res => {\n  const mongoClient = new MongoClient(process.env.dataBaseUrl);\n  await mongoClient.connect(err => err && res.json(400));\n  return mongoClient;\n};\n\nexport default (async (req, res) => {\n  const data = await JSON.parse(req.body);\n\n  if (data.feedback) {\n    const mongoClient = await help(res); // const db = mongoClient.db(\"Main\");\n    // const collection = db.collection(\"Main\");\n    // console.log(collection)\n\n    switch (data.feedback) {\n      case \"dislike\":\n        console.log('disliked!!!');\n        break;\n\n      case \"like\":\n        console.log('liked!');\n        break;\n\n      default:\n        res.status(400);\n        res.json({\n          message: \"No data in request\"\n        });\n    }\n\n    res.send({\n      message: 'Updated was successful'\n    });\n  }\n});","map":{"version":3,"sources":["/Users/denisten/workspace/mid-landing/pages/api/test.ts"],"names":["MongoClient","help","res","mongoClient","process","env","dataBaseUrl","connect","err","json","req","data","JSON","parse","body","feedback","console","log","status","message","send"],"mappings":"AACA,SAAQA,WAAR,QAA0B,SAA1B;;AAEA,MAAMC,IAAI,GAAG,MAAOC,GAAP,IAAgC;AACzC,QAAMC,WAAW,GAAG,IAAIH,WAAJ,CAAgBI,OAAO,CAACC,GAAR,CAAYC,WAA5B,CAApB;AACA,QAAMH,WAAW,CAACI,OAAZ,CAAqBC,GAAD,IAASA,GAAG,IAAIN,GAAG,CAACO,IAAJ,CAAS,GAAT,CAApC,CAAN;AACA,SAAON,WAAP;AACH,CAJD;;AAMA,gBAAe,OAAOO,GAAP,EAA4BR,GAA5B,KAAqD;AAChE,QAAMS,IAAI,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,IAAf,CAAnB;;AACA,MAAGH,IAAI,CAACI,QAAR,EAAkB;AACd,UAAMZ,WAAW,GAAG,MAAMF,IAAI,CAACC,GAAD,CAA9B,CADc,CAEd;AACA;AACA;;AACA,YAAQS,IAAI,CAACI,QAAb;AACI,WAAK,SAAL;AACKC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;;AACJ,WAAK,MAAL;AACKD,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;AACJ;AACIf,QAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX;AACAhB,QAAAA,GAAG,CAACO,IAAJ,CAAS;AAACU,UAAAA,OAAO,EAAE;AAAV,SAAT;AATR;;AAWAjB,IAAAA,GAAG,CAACkB,IAAJ,CAAS;AAAED,MAAAA,OAAO,EAAE;AAAX,KAAT;AACH;AACJ,CApBD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\nimport {MongoClient} from 'mongodb';\n\nconst help = async (res: NextApiResponse) => {\n    const mongoClient = new MongoClient(process.env.dataBaseUrl);\n    await mongoClient.connect((err) => err && res.json(400));\n    return mongoClient\n}\n\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\n    const data = await JSON.parse(req.body)\n    if(data.feedback) {\n        const mongoClient = await help(res);\n        // const db = mongoClient.db(\"Main\");\n        // const collection = db.collection(\"Main\");\n        // console.log(collection)\n        switch (data.feedback) {\n            case \"dislike\":\n                 console.log('disliked!!!')\n                break;\n            case \"like\":\n                 console.log('liked!')\n                break;\n            default:\n                res.status(400);\n                res.json({message: \"No data in request\"})\n        }\n        res.send({ message: 'Updated was successful' })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}