{"ast":null,"code":"var _jsxFileName = \"/Users/denisten/workspace/mid-landing/components/modal-window/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ModalWindowContent } from '../../pages';\nimport { CallMeBack } from '../call-me-back-modal';\nimport { ConsultMe } from '../consult-me';\nconst Wrapper = styled.div`\n  background: rgba(0, 0, 0, 0.75);\n  display: flex;\n  align-items: flex-start;\n  position: fixed;\n  opacity: 0;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1000;\n  padding: 1.2rem;\n  transition: all 0.3s ease-in-out;\n  visibility: hidden;\n  &.open {\n    opacity: 1;\n    visibility: visible;\n  }\n  h4 {\n    margin-bottom: 1em;\n    text-align: center;\n    margin-top: 0.5em;\n  }\n`;\nconst CloseButton = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  display: flex;\n  color: #fff;\n  cursor: pointer;\n`;\nconst wrapperId = 'modal-window-close-area';\nexport const ModalWindow = props => {\n  const {\n    modalIsOpen,\n    handler,\n    content,\n    handleCallMeBackClick,\n    handleConsultMe,\n    closeModalWindow\n  } = props;\n\n  const closeButtonClickHandler = e => {\n    e.stopPropagation();\n    handler();\n  };\n\n  const wrapperClickHandler = e => {\n    // @ts-ignore\n    if (e.target.getAttribute('id') === wrapperId) handler();\n  };\n\n  const defineContentElement = content => {\n    switch (content) {\n      case ModalWindowContent.CALL_ME_BACK:\n        return __jsx(CallMeBack, {\n          handler: handleCallMeBackClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 16\n          }\n        });\n\n      case ModalWindowContent.CONSULT_ME:\n        return __jsx(ConsultMe, {\n          consultMeHandler: handleConsultMe,\n          cancelHandler: closeModalWindow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        return null;\n    }\n  };\n\n  const contentElement = defineContentElement(content);\n  return __jsx(Wrapper, {\n    id: wrapperId,\n    className: modalIsOpen ? 'open' : '',\n    onClick: wrapperClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(CloseButton, {\n    onClick: closeButtonClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"X\"), contentElement);\n};","map":{"version":3,"sources":["/Users/denisten/workspace/mid-landing/components/modal-window/index.tsx"],"names":["React","styled","ModalWindowContent","CallMeBack","ConsultMe","Wrapper","div","CloseButton","wrapperId","ModalWindow","props","modalIsOpen","handler","content","handleCallMeBackClick","handleConsultMe","closeModalWindow","closeButtonClickHandler","e","stopPropagation","wrapperClickHandler","target","getAttribute","defineContentElement","CALL_ME_BACK","CONSULT_ME","contentElement"],"mappings":";;AAAA,OAAOA,KAAP,MAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;CAA3B;AA0BA,MAAMC,WAAW,GAAGN,MAAM,CAACK,GAAI;;;;;;;;;;CAA/B;AAYA,MAAME,SAAS,GAAG,yBAAlB;AAEA,OAAO,MAAMC,WAAmC,GAAIC,KAAD,IAAW;AAC5D,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA,qBAAjC;AAAwDC,IAAAA,eAAxD;AAAyEC,IAAAA;AAAzE,MAA8FN,KAApG;;AACA,QAAMO,uBAAuB,GAAIC,CAAD,IAAmB;AACjDA,IAAAA,CAAC,CAACC,eAAF;AACAP,IAAAA,OAAO;AACR,GAHD;;AAKA,QAAMQ,mBAAmB,GAAIF,CAAD,IAAmC;AAC7D;AACA,QAAIA,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,IAAtB,MAAgCd,SAApC,EAA+CI,OAAO;AACvD,GAHD;;AAKA,QAAMW,oBAAoB,GAAIV,OAAD,IAAwC;AACnE,YAAQA,OAAR;AACE,WAAKX,kBAAkB,CAACsB,YAAxB;AACE,eAAO,MAAC,UAAD;AAAY,UAAA,OAAO,EAAEV,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF,WAAKZ,kBAAkB,CAACuB,UAAxB;AACE,eAAO,MAAC,SAAD;AAAW,UAAA,gBAAgB,EAAEV,eAA7B;AAA8C,UAAA,aAAa,EAAEC,gBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF;AACE,eAAO,IAAP;AANJ;AAQD,GATD;;AAWA,QAAMU,cAAc,GAAGH,oBAAoB,CAACV,OAAD,CAA3C;AACA,SACE,MAAC,OAAD;AACE,IAAA,EAAE,EAAEL,SADN;AAEE,IAAA,SAAS,EAAEG,WAAW,GAAG,MAAH,GAAY,EAFpC;AAGE,IAAA,OAAO,EAAES,mBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEH,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALF,EAMGS,cANH,CADF;AAUD,CAlCM","sourcesContent":["import React, { FormEvent, MouseEvent } from 'react';\nimport styled from 'styled-components';\nimport { IHandler } from '../about';\nimport { ModalWindowContent } from '../../pages';\nimport { CallMeBack } from '../call-me-back-modal';\nimport { ConsultMe } from '../consult-me';\n\nconst Wrapper = styled.div`\n  background: rgba(0, 0, 0, 0.75);\n  display: flex;\n  align-items: flex-start;\n  position: fixed;\n  opacity: 0;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1000;\n  padding: 1.2rem;\n  transition: all 0.3s ease-in-out;\n  visibility: hidden;\n  &.open {\n    opacity: 1;\n    visibility: visible;\n  }\n  h4 {\n    margin-bottom: 1em;\n    text-align: center;\n    margin-top: 0.5em;\n  }\n`;\nconst CloseButton = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  display: flex;\n  color: #fff;\n  cursor: pointer;\n`;\n\nconst wrapperId = 'modal-window-close-area';\n\nexport const ModalWindow: React.FC<IModalWindow> = (props) => {\n  const { modalIsOpen, handler, content, handleCallMeBackClick, handleConsultMe, closeModalWindow } = props;\n  const closeButtonClickHandler = (e: MouseEvent) => {\n    e.stopPropagation();\n    handler();\n  };\n\n  const wrapperClickHandler = (e: MouseEvent<HTMLDivElement>) => {\n    // @ts-ignore\n    if (e.target.getAttribute('id') === wrapperId) handler();\n  };\n\n  const defineContentElement = (content: ModalWindowContent | null) => {\n    switch (content) {\n      case ModalWindowContent.CALL_ME_BACK:\n        return <CallMeBack handler={handleCallMeBackClick} />;\n      case ModalWindowContent.CONSULT_ME:\n        return <ConsultMe consultMeHandler={handleConsultMe} cancelHandler={closeModalWindow}/>;\n      default:\n        return null;\n    }\n  };\n\n  const contentElement = defineContentElement(content);\n  return (\n    <Wrapper\n      id={wrapperId}\n      className={modalIsOpen ? 'open' : ''}\n      onClick={wrapperClickHandler}\n    >\n      <CloseButton onClick={closeButtonClickHandler}>X</CloseButton>\n      {contentElement}\n    </Wrapper>\n  );\n};\n\ninterface IModalWindow extends IHandler {\n  modalIsOpen: boolean;\n  content: ModalWindowContent | null;\n  handleCallMeBackClick: Function;\n  handleConsultMe: Function;\n  closeModalWindow: Function;\n}\n"]},"metadata":{},"sourceType":"module"}