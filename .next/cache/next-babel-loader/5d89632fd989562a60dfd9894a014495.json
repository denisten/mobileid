{"ast":null,"code":"var _jsxFileName = \"/Users/denisten/workspace/next-fonts-example/mid-landing/components/buttons/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport styled from 'styled-components';\nimport React from 'react';\nconst ButtonConsultWrapper = styled.div`\n  font-family: MuseoSansMedium, sans-serif;\n  font-size: 18px;\n  line-height: 60px;\n  display: inline-block;\n  width: 287px;\n  min-width: 220px;\n  height: 60px;\n  padding: 0 38px;\n  cursor: pointer;\n  -webkit-transition: background-color 0.3s ease;\n  transition: background-color 0.3s ease;\n  text-align: center;\n  text-decoration: none;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  background-color: #c000d9;\n  box-shadow: none;\n  margin: ${props => props.margin};\n  :hover {\n    background-color: #de04fa;\n    color: #fff;\n  }\n`;\nconst ButtonDemoWrapper = styled(ButtonConsultWrapper)`\n  color: #202d3d;\n  background-color: transparent;\n  border: 2px solid #bbc1c7;\n  font-weight: 700;\n`;\nexport const ButtonConsult = props => {\n  return __jsx(ButtonConsultWrapper, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043A\\u043E\\u043D\\u0441\\u0443\\u043B\\u044C\\u0442\\u0430\\u0446\\u0438\\u044E\");\n};\nexport const ButtonDemo = props => {\n  return __jsx(ButtonDemoWrapper, _extends({}, props, {\n    onClick: () => window.open('ya.ru'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }), \"\\u0414\\u0435\\u043C\\u043E \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\");\n};","map":{"version":3,"sources":["/Users/denisten/workspace/next-fonts-example/mid-landing/components/buttons/index.tsx"],"names":["styled","React","ButtonConsultWrapper","div","props","margin","ButtonDemoWrapper","ButtonConsult","ButtonDemo","window","open"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,oBAAoB,GAAGF,MAAM,CAACG,GAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAaC,KAAD,IAAWA,KAAK,CAACC,MAAO;AACpC;AACA;AACA;AACA;AACA,CAxBA;AA0BA,MAAMC,iBAAiB,GAAGN,MAAM,CAACE,oBAAD,CAAuB;AACvD;AACA;AACA;AACA;AACA,CALA;AAOA,OAAO,MAAMK,aAAgC,GAAIH,KAAD,IAAW;AACzD,SACE,MAAC,oBAAD,eAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kIADF;AAKD,CANM;AAQP,OAAO,MAAMI,UAA6B,GAAIJ,KAAD,IAAW;AACtD,SAAO,MAAC,iBAAD,eAAuBA,KAAvB;AAA8B,IAAA,OAAO,EAAE,MAAMK,MAAM,CAACC,IAAP,CAAY,OAAZ,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAAP;AACD,CAFM","sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\n\nconst ButtonConsultWrapper = styled.div<IButton>`\n  font-family: MuseoSansMedium, sans-serif;\n  font-size: 18px;\n  line-height: 60px;\n  display: inline-block;\n  width: 287px;\n  min-width: 220px;\n  height: 60px;\n  padding: 0 38px;\n  cursor: pointer;\n  -webkit-transition: background-color 0.3s ease;\n  transition: background-color 0.3s ease;\n  text-align: center;\n  text-decoration: none;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  background-color: #c000d9;\n  box-shadow: none;\n  margin: ${(props) => props.margin};\n  :hover {\n    background-color: #de04fa;\n    color: #fff;\n  }\n`;\n\nconst ButtonDemoWrapper = styled(ButtonConsultWrapper)`\n  color: #202d3d;\n  background-color: transparent;\n  border: 2px solid #bbc1c7;\n  font-weight: 700;\n`;\n\nexport const ButtonConsult: React.FC<IButton> = (props) => {\n  return (\n    <ButtonConsultWrapper {...props}>\n      Получить консультацию\n    </ButtonConsultWrapper>\n  );\n};\n\nexport const ButtonDemo: React.FC<IButton> = (props) => {\n  return <ButtonDemoWrapper {...props} onClick={() => window.open('ya.ru')}>Демо доступ</ButtonDemoWrapper>;\n};\n\ninterface IButton {\n  margin?: string;\n}\n"]},"metadata":{},"sourceType":"module"}