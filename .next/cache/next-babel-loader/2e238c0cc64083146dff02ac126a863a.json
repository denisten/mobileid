{"ast":null,"code":"var _jsxFileName = \"/Users/denisten/workspace/mid-landing/components/modal-window/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ModalWindowContent } from '../../pages';\nimport { CallMeBack } from '../call-me-back';\nconst Wrapper = styled.div`\n  background: rgba(0, 0, 0, 0.75);\n  display: flex;\n  align-items: flex-start;\n  position: fixed;\n  opacity: 0;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1000;\n  padding: 1.2rem;\n  transition: all 0.3s ease-in-out;\n  visibility: hidden;\n  &.open {\n    opacity: 1;\n    visibility: visible;\n  }\n  h4 {\n    margin-bottom: 1em;\n    text-align: center;\n    margin-top: 0.5em;\n  }\n`;\nconst CloseButton = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  display: flex;\n  color: #fff;\n  cursor: pointer;\n`;\nconst wrapperId = 'modal-window-close-area';\nexport const ModalWindow = props => {\n  const {\n    modalIsOpen,\n    handler,\n    content\n  } = props;\n\n  const closeButtonClickHandler = e => {\n    e.stopPropagation();\n    handler();\n  };\n\n  const wrapperClickHandler = e => {\n    // @ts-ignore\n    if (e.target.getAttribute('id') === wrapperId) handler();\n  };\n\n  return __jsx(Wrapper, {\n    id: wrapperId,\n    className: modalIsOpen ? 'open' : '',\n    onClick: wrapperClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(CloseButton, {\n    onClick: closeButtonClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"X\"), content === ModalWindowContent.CALL_ME_BACK ? __jsx(CallMeBack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 54\n    }\n  }) : '');\n};","map":{"version":3,"sources":["/Users/denisten/workspace/mid-landing/components/modal-window/index.tsx"],"names":["React","styled","ModalWindowContent","CallMeBack","Wrapper","div","CloseButton","wrapperId","ModalWindow","props","modalIsOpen","handler","content","closeButtonClickHandler","e","stopPropagation","wrapperClickHandler","target","getAttribute","CALL_ME_BACK"],"mappings":";;AAAA,OAAOA,KAAP,MAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;CAA3B;AA0BA,MAAMC,WAAW,GAAGL,MAAM,CAACI,GAAI;;;;;;;;;;CAA/B;AAYA,MAAME,SAAS,GAAG,yBAAlB;AAEA,OAAO,MAAMC,WAAmC,GAAIC,KAAD,IAAW;AAC5D,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAoCH,KAA1C;;AACA,QAAMI,uBAAuB,GAAIC,CAAD,IAAmB;AACjDA,IAAAA,CAAC,CAACC,eAAF;AACAJ,IAAAA,OAAO;AACR,GAHD;;AAIA,QAAMK,mBAAmB,GAAIF,CAAD,IAAmC;AAC7D;AACA,QAAIA,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,IAAtB,MAAgCX,SAApC,EAA+CI,OAAO;AACvD,GAHD;;AAIA,SACE,MAAC,OAAD;AACE,IAAA,EAAE,EAAEJ,SADN;AAEE,IAAA,SAAS,EAAEG,WAAW,GAAG,MAAH,GAAY,EAFpC;AAGE,IAAA,OAAO,EAAEM,mBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEH,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALF,EAMGD,OAAO,KAAKV,kBAAkB,CAACiB,YAA/B,GAA8C,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9C,GAA+D,EANlE,CADF;AAUD,CApBM","sourcesContent":["import React, { MouseEvent } from 'react';\nimport styled from 'styled-components';\nimport { IHandler } from '../about';\nimport { ModalWindowContent } from '../../pages';\nimport { CallMeBack } from '../call-me-back';\n\nconst Wrapper = styled.div`\n  background: rgba(0, 0, 0, 0.75);\n  display: flex;\n  align-items: flex-start;\n  position: fixed;\n  opacity: 0;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1000;\n  padding: 1.2rem;\n  transition: all 0.3s ease-in-out;\n  visibility: hidden;\n  &.open {\n    opacity: 1;\n    visibility: visible;\n  }\n  h4 {\n    margin-bottom: 1em;\n    text-align: center;\n    margin-top: 0.5em;\n  }\n`;\nconst CloseButton = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  display: flex;\n  color: #fff;\n  cursor: pointer;\n`;\n\nconst wrapperId = 'modal-window-close-area';\n\nexport const ModalWindow: React.FC<IModalWindow> = (props) => {\n  const { modalIsOpen, handler, content } = props;\n  const closeButtonClickHandler = (e: MouseEvent) => {\n    e.stopPropagation();\n    handler();\n  };\n  const wrapperClickHandler = (e: MouseEvent<HTMLDivElement>) => {\n    // @ts-ignore\n    if (e.target.getAttribute('id') === wrapperId) handler();\n  };\n  return (\n    <Wrapper\n      id={wrapperId}\n      className={modalIsOpen ? 'open' : ''}\n      onClick={wrapperClickHandler}\n    >\n      <CloseButton onClick={closeButtonClickHandler}>X</CloseButton>\n      {content === ModalWindowContent.CALL_ME_BACK ? <CallMeBack /> : ''}\n    </Wrapper>\n  );\n};\n\ninterface IModalWindow extends IHandler {\n  modalIsOpen: boolean;\n  content: ModalWindowContent | null;\n}\n"]},"metadata":{},"sourceType":"module"}